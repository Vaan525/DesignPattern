Singleton Pattern

싱글톤의 목적은 하나의 인스턴스를 메모리에 올리고 공유를 하는 개념
즉, 인스턴스가 하나만 생성이 된다.

* 싱글턴 패턴을 사용시 동시성(Concurrency)문제를 고려하여 작성할것

싱글턴 패턴은 자바와 스프링 2가지가 있다. (?)

공통적인 특징은 private constructor를 가지며 static method를 사용

EagerInitialization(이른 초기화)
	vaan.design.singleton.SingletonEagerInitialization 파일 참조
	static 키워드의 특징, 모든객체가 공유를 하는, 정적변수의 특징을 사용
	싱글톤의 목적이 하나의 인스턴스를 공유하는 개념이기에 static 키워드의 특징과 유사하다고 볼수 있나(?)
	



[짜투리 정보]
static 키워드 정리
1. static이 붙은 변수들은 객체들이 다 같이 공유하는 데이터를 의미한다.
static이 붙은 변수는 운영하는 사이트의 통계자료와 같이 직원과 사용자가 공유하는 데이터가 된다.
번호표를 주는 로직에서 번호에 static을 주고 A사람과 B사람이 받는다면, A와 B는 서로 자기가 1번이라고 주장하는
모순이 생기는데, 이럴때 각각의 객체(A와B)가 데이터를 공유한다면 이러한 상황을 피할 수 있다. 

2. static이 붙은 메소드들은 객체들의 데이터와 관계없는 완벽하게 공통적인 로직을 정의할 때 사용한다.
3번의 객체를 가질수 없는 법칙때문에 객체의 메소드로 호출되는 함수의 동작방법이 매번 동일하다. 

3. 따라서 static 메소드에서는 인스턴스 변수나 객체의 메소드를 사용할 수 없다.
static이 붙은 메소드를 사용하는 이유는 객체과의 관계를 안가지기 위해서, 공유하는 메소드가 
같은 과정과 결과값을 바라봐야되기 때문. 컴파일 시스템적으로 static이 붙은 메소드 내에서의 객체 데이터의 사용이
불가능하다.



[출처 링크]
출처: https://devbox.tistory.com/entry/Java-static [장인개발자를 꿈꾸는 :: 기록하는 공간]
참고 인터넷 링크 http://www.nextree.co.kr/p6960/